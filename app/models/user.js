// app/models/user.js
// Javascript file for MongoDB User-schema intended for storing user information.

// Require 'mongoose' to get the needed schema object for user model.
var mongoose = require('mongoose');
var bcrypt   = require('bcrypt-nodejs');

// MongoDB schema for user model that is used for storing data to the MongoDB.
var userSchema = mongoose.Schema({
  /* Extra information to User to be added. */
  rights: { type: String, default: 'User'},               // 'User' or 'Admin'
  local: {
    email: String,
    password: String,
    firstName: { type: String, default: 'None'},         // Name of user
    lastName: { type: String, default: 'None'},          // Last name.
  },
  twitter: {
      id: String,
      token: String,
      displayName: String,
      username: String
  },
});


// userSchema's methods.
userSchema.methods.genHash = function(password) {
  // Encrypts 'password' with salt generated by genSaltSync.
  return bcrypt.hashSync(password, bcrypt.genSaltSync(8), null);
};

userSchema.methods.validPassword = function(password) {
  // Compares given 'password' and hashed password in model.
  return bcrypt.compareSync(password, this.local.password);
};

userSchema.methods.comparePassword = function(candidatePassword, cb) {
    bcrypt.compare(candidatePassword, this.local.password, function(err, isMatch) {
        if (err) return cb(err);
        cb(null, isMatch);
    });
};

module.exports = mongoose.model('User', userSchema);
